services:

  api:
    container_name: api
    build: .
    environment:
      - DB_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      logstash:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8080:8080"

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    ports:
      - "5436:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    container_name: redis
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - app-network

  elasticsearch:
    container_name: elastic_search
    image: elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    container_name: kibana
    image: kibana:8.13.4
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app-network

  logstash:
    container_name: logstash
    image: logstash:8.13.4
    volumes:
      - ./internal/config/logstash/pipeline:/usr/share/logstash/pipeline
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9600/_node/stats/pipelines || exit 1" ]
      interval: 30s  
      timeout: 10s
      retries: 3
      start_period: 10s

    networks:
      - app-network

  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:8.13.4
    user: root
    volumes:
      - ./internal/config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - filebeat-logs:/usr/share/filebeat/logs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    command: >
      bash -c "
      chown -R root:root /usr/share/filebeat &&
      chmod -R go-w /usr/share/filebeat &&
      filebeat -e
      "

volumes:
  postgres-data:
  redis-data:
  elastic-data:
  filebeat-logs:

networks:
  app-network:
    driver: bridge
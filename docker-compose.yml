services:

  api:
    container_name: api
    build: .
    environment:
      - DB_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
#    ports:
#     - "8080:8080"

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    ports:
      - "5436:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    container_name: redis
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network
    volumes:
      - ./internal/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin12345
    networks:
      - app-network
    depends_on:
      - prometheus
      - loki
    volumes:
      - ./internal/config/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafanadata:/var/lib/grafana

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-network
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./internal/config/promtail/config.yml:/etc/promtail/config.yml

  nginx:
    image: nginx:1.27.5
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    

volumes:
  postgres-data:
  redis-data:
  prometheusdata:
  grafanadata:

networks:
  app-network:
    driver: bridge